{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mustaphasaeed/Jazz/screens/Favorites.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport { Button, Text, Card, List } from '@ui-kitten/components';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function Favorites(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cards = _useState2[0],\n      setCards = _useState2[1];\n\n  var favoriteCard = route.params.favoriteCard;\n  var navigation = useNavigation();\n  useFocusEffect(React.useCallback(function () {\n    getCards();\n  }, []));\n\n  var getCards = function getCards() {\n    AsyncStorage.getItem(\"CARDS\").then(function (cards) {\n      setCards(JSON.parse(cards));\n    });\n  };\n\n  var getFavoriteCards = function getFavoriteCards() {\n    var favoriteCards;\n    return _regeneratorRuntime.async(function getFavoriteCards$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(cards.filter(function (card) {\n              return card === favoriteCard;\n            }));\n\n          case 2:\n            favoriteCards = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"CARDS\", JSON.stringify(favoriteCards)));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var removeFavoriteCard = function removeFavoriteCard() {\n    var favoriteCards;\n    return _regeneratorRuntime.async(function removeFavoriteCard$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(cards.filter(function (card) {\n              return card !== favoriteCard;\n            }));\n\n          case 2:\n            favoriteCards = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"CARDS\", JSON.stringify(favoriteCards)));\n\n          case 5:\n            then(function () {\n              return navigation.navigate('Favorites');\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderItemHeader = function renderItemHeader(headerProps, info) {\n    return React.createElement(View, _extends({}, headerProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      category: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Icons header\"));\n  };\n\n  var renderItemFooter = function renderItemFooter(footerProps) {\n    return React.createElement(Button, _extends({}, footerProps, {\n      onPress: removeFavoriteCard,\n      style: styles.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), \"Remove Favorite\");\n  };\n\n  var renderItem = function renderItem(item) {\n    return React.createElement(Card, {\n      style: styles.item,\n      status: \"basic\",\n      header: function header(headerProps) {\n        return renderItemHeader(headerProps, info);\n      },\n      footer: renderItemFooter,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      category: \"h5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\"));\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    category: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"All Cards\"), React.createElement(List, {\n    style: styles.container,\n    contentContainerStyle: styles.contentContainer,\n    data: cards.reverse(),\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#222B45',\n    color: 'white',\n    padding: 30,\n    paddingTop: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: Dimensions.get(\"window\").width\n  },\n  bottom: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    marginBottom: 36\n  },\n  button: {\n    marginBottom: 30\n  }\n});","map":{"version":3,"sources":["/Users/mustaphasaeed/Jazz/screens/Favorites.js"],"names":["React","useState","useFocusEffect","useNavigation","Button","Text","Card","List","AsyncStorage","Favorites","route","cards","setCards","favoriteCard","params","navigation","useCallback","getCards","getItem","then","JSON","parse","getFavoriteCards","filter","card","favoriteCards","setItem","stringify","removeFavoriteCard","navigate","renderItemHeader","headerProps","info","renderItemFooter","footerProps","styles","button","renderItem","item","title","container","contentContainer","reverse","StyleSheet","create","flex","backgroundColor","color","padding","paddingTop","alignItems","justifyContent","width","Dimensions","get","bottom","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, TextInput,KeyboardAvoidingView, Dimensions } from 'react-native';\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport { Button, Text, Card, List } from '@ui-kitten/components';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nexport default function Favorites({route}) {\n\n   const [cards, setCards] = useState([])\n   const {favoriteCard} = route.params\n   const navigation = useNavigation()\n\n    useFocusEffect(\n        React.useCallback(\n            () => {\n                getCards()\n            },\n            [],\n        )\n    )\n    const getCards = () =>  {\n        AsyncStorage.getItem(\"CARDS\").then((cards) => {\n            setCards(JSON.parse(cards))\n\n        })\n    }\n    const getFavoriteCards = async () =>  {\n        const favoriteCards = await cards.filter((card) => card === favoriteCard)\n        await AsyncStorage.setItem(\"CARDS\", JSON.stringify(favoriteCards))\n\n        \n    }\n    const removeFavoriteCard = async () =>  {\n        const favoriteCards = await cards.filter((card) => card !== favoriteCard)\n        await AsyncStorage.setItem(\"CARDS\", JSON.stringify(favoriteCards))\n            then(() => navigation.navigate('Favorites'))\n\n        \n    }\n    const renderItemHeader = (headerProps, info) => (\n        <View {...headerProps}>\n          <Text category='h6'>\n            {/* {info.item.title} {info.index + 1} */}\n            Icons header\n          </Text>\n        </View>\n      );\n    \n      const renderItemFooter = (footerProps) => (\n        <Button {...footerProps} onPress = {removeFavoriteCard} style = {styles.button}>\n          Remove Favorite\n        </Button>\n      );\n    \n      const renderItem = (item) => (\n        <Card\n          style={styles.item}\n          status='basic'\n          header={headerProps => renderItemHeader(headerProps, info)}\n          footer={renderItemFooter}\n        //   onPress = {() => navigation.navigate(\"Card\", {\n        //     singleCard: item\n        //   })} \n        >\n          <Text category = 'h5'>\n         \n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's\n            standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make\n            a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting,\n            remaining essentially unchanged.\n          </Text>\n\n        </Card>\n      );\n  return (\n    <View>\n        <Text style={styles.title} category = 'h1'>\n            All Cards\n\n        </Text>\n        <List\n            style={styles.container}\n            contentContainerStyle={styles.contentContainer}\n            data={cards.reverse()}\n            renderItem={renderItem}\n        />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n    backgroundColor: '#222B45',\n    color: 'white',\n    padding: 30,\n    paddingTop: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n\n    width: Dimensions.get(\"window\").width\n  },\n\n  bottom: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      marginBottom: 36\n  },\n\n  button: {\n      marginBottom: 30\n  }\n});\n"]},"metadata":{},"sourceType":"module"}