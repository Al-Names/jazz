{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mustaphasaeed/Jazz/screens/Upload.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Button } from '@ui-kitten/components';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function Upload() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      card = _useState2[0],\n      setCard = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var saveCard = function saveCard() {\n    var value, n;\n    return _regeneratorRuntime.async(function saveCard$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"CARDS\"));\n\n          case 2:\n            value = _context.sent;\n            n = value ? JSON.parse(value) : [];\n            n.push(card);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"CARDS\", JSON.stringify(n)).then(function () {\n              return navigation.navigate(\"Browse\");\n            }));\n\n          case 7:\n            setCard(\"\");\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    value: card,\n    onChangeText: setCard,\n    style: {\n      color: \"#fff\",\n      fontSize: 22\n    },\n    multiline: true,\n    autoFocus: true,\n    selectionColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    style: styles.button,\n    appearance: \"filled\",\n    onPress: saveCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Upload\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#222B45',\n    color: 'white',\n    padding: 30,\n    paddingTop: 80,\n    width: Dimensions.get(\"window\").width\n  },\n  bottom: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    marginBottom: 36\n  },\n  button: {\n    marginBottom: 30\n  }\n});","map":{"version":3,"sources":["/Users/mustaphasaeed/Jazz/screens/Upload.js"],"names":["React","useState","useNavigation","Button","AsyncStorage","Upload","card","setCard","navigation","saveCard","getItem","value","n","JSON","parse","push","setItem","stringify","then","navigate","styles","container","color","fontSize","Platform","OS","bottom","button","StyleSheet","create","flex","backgroundColor","padding","paddingTop","width","Dimensions","get","justifyContent","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,eAAe,SAASC,MAAT,GAAkB;AAE9B,kBAAwBJ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,UAAU,GAAGN,aAAa,EAAhC;;AAEC,MAAMO,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOL,YAAY,CAACM,OAAb,CAAqB,OAArB,CADP;;AAAA;AACPC,YAAAA,KADO;AAEPC,YAAAA,CAFO,GAEHD,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAH,GAAuB,EAFzB;AAGbC,YAAAA,CAAC,CAACG,IAAF,CAAOT,IAAP;AAHa;AAAA,6CAIPF,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,SAAL,CAAeL,CAAf,CAA9B,EAAiDM,IAAjD,CAAsD;AAAA,qBAAMV,UAAU,CAACW,QAAX,CAAoB,QAApB,CAAN;AAAA,aAAtD,CAJO;;AAAA;AAKbZ,YAAAA,OAAO,CAAC,EAAD,CAAP;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAQF,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAIf,IADb;AAEI,IAAA,YAAY,EAAIC,OAFpB;AAGI,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B,KAHX;AAII,IAAA,SAAS,EAAI,IAJjB;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,cAAc,EAAG,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI,oBAAC,oBAAD;AACI,IAAA,QAAQ,EAAIC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QADpD;AAEI,IAAA,KAAK,EAAIL,MAAM,CAACM,MAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,MAAD;AACI,IAAA,KAAK,EAAIN,MAAM,CAACO,MADpB;AAEI,IAAA,UAAU,EAAG,QAFjB;AAGI,IAAA,OAAO,EAAIlB,QAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CATJ,CADF;AAuBD;AAED,IAAMW,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAE/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTT,IAAAA,KAAK,EAAE,OAHE;AAITU,IAAAA,OAAO,EAAE,EAJA;AAKTC,IAAAA,UAAU,EAAE,EALH;AAQTC,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF;AARvB,GAFoB;AAa/BR,EAAAA,MAAM,EAAE;AACJI,IAAAA,IAAI,EAAE,CADF;AAEJO,IAAAA,cAAc,EAAE,UAFZ;AAGJC,IAAAA,YAAY,EAAE;AAHV,GAbuB;AAmB/BX,EAAAA,MAAM,EAAE;AACJW,IAAAA,YAAY,EAAE;AADV;AAnBuB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput,KeyboardAvoidingView, Dimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button } from '@ui-kitten/components';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nexport default function Upload() {\n\n   const [card, setCard] = useState(\"\")\n   const navigation = useNavigation()\n\n    const saveCard = async () => {\n        const value = await AsyncStorage.getItem(\"CARDS\")\n        const n = value ? JSON.parse(value) : []\n        n.push(card)\n        await AsyncStorage.setItem(\"CARDS\", JSON.stringify(n)).then(() => navigation.navigate(\"Browse\"))\n        setCard(\"\")\n    }\n\n  return (\n    <View style={styles.container}>\n        <TextInput\n            value = {card}\n            onChangeText = {setCard}\n            style={{ color: \"#fff\", fontSize: 22 }}\n            multiline = {true}\n            autoFocus\n            selectionColor = '#fff' \n        />\n        <KeyboardAvoidingView \n            behavior = {Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n            style = {styles.bottom}\n        >\n            <Button \n                style = {styles.button} \n                appearance = \"filled\" \n                onPress = {saveCard}>\n                Upload\n            </Button>\n        </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n    backgroundColor: '#222B45',\n    color: 'white',\n    padding: 30,\n    paddingTop: 80,\n \n\n    width: Dimensions.get(\"window\").width\n  },\n\n  bottom: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      marginBottom: 36\n  },\n\n  button: {\n      marginBottom: 30\n  }\n});\n"]},"metadata":{},"sourceType":"module"}